/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface JobScheduleOut
 */
export interface JobScheduleOut {
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    scheduleName: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    jobType: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    ownerUserId?: any | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof JobScheduleOut
     */
    payload: { [key: string]: any; } | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    tags?: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    folderId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    frequency: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    nextRunAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    lastRunAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    lastJobId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    lastError?: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    lastErrorAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof JobScheduleOut
     */
    isActive?: any | null;
}

/**
 * Check if a given object implements the JobScheduleOut interface.
 */
export function instanceOfJobScheduleOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "scheduleName" in value;
    isInstance = isInstance && "jobType" in value;
    isInstance = isInstance && "payload" in value;
    isInstance = isInstance && "frequency" in value;

    return isInstance;
}

export function JobScheduleOutFromJSON(json: any): JobScheduleOut {
    return JobScheduleOutFromJSONTyped(json, false);
}

export function JobScheduleOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobScheduleOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'scheduleName': json['schedule_name'],
        'jobType': json['job_type'],
        'ownerUserId': !exists(json, 'owner_user_id') ? undefined : json['owner_user_id'],
        'payload': json['payload'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'folderId': !exists(json, 'folder_id') ? undefined : json['folder_id'],
        'frequency': json['frequency'],
        'nextRunAt': !exists(json, 'next_run_at') ? undefined : json['next_run_at'],
        'lastRunAt': !exists(json, 'last_run_at') ? undefined : json['last_run_at'],
        'lastJobId': !exists(json, 'last_job_id') ? undefined : json['last_job_id'],
        'lastError': !exists(json, 'last_error') ? undefined : json['last_error'],
        'lastErrorAt': !exists(json, 'last_error_at') ? undefined : json['last_error_at'],
        'isActive': !exists(json, 'is_active') ? undefined : json['is_active'],
    };
}

export function JobScheduleOutToJSON(value?: JobScheduleOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'schedule_name': value.scheduleName,
        'job_type': value.jobType,
        'owner_user_id': value.ownerUserId,
        'payload': value.payload,
        'tags': value.tags,
        'folder_id': value.folderId,
        'frequency': value.frequency,
        'next_run_at': value.nextRunAt,
        'last_run_at': value.lastRunAt,
        'last_job_id': value.lastJobId,
        'last_error': value.lastError,
        'last_error_at': value.lastErrorAt,
        'is_active': value.isActive,
    };
}

