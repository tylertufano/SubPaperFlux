/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MeNotificationPreferences } from './MeNotificationPreferences';
import {
    MeNotificationPreferencesFromJSON,
    MeNotificationPreferencesFromJSONTyped,
    MeNotificationPreferencesToJSON,
    MeNotificationPreferencesToJSONTyped,
} from './MeNotificationPreferences';

/**
 * 
 * @export
 * @interface MeOut
 */
export interface MeOut {
    /**
     * 
     * @type {string}
     * @memberof MeOut
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof MeOut
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MeOut
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MeOut
     */
    pictureUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MeOut
     */
    locale?: string | null;
    /**
     * 
     * @type {MeNotificationPreferences}
     * @memberof MeOut
     */
    notificationPreferences: MeNotificationPreferences;
}

/**
 * Check if a given object implements the MeOut interface.
 */
export function instanceOfMeOut(value: object): value is MeOut {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('notificationPreferences' in value) || value['notificationPreferences'] === undefined) return false;
    return true;
}

export function MeOutFromJSON(json: any): MeOut {
    return MeOutFromJSONTyped(json, false);
}

export function MeOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeOut {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': json['email'] == null ? undefined : json['email'],
        'fullName': json['full_name'] == null ? undefined : json['full_name'],
        'pictureUrl': json['picture_url'] == null ? undefined : json['picture_url'],
        'locale': json['locale'] == null ? undefined : json['locale'],
        'notificationPreferences': MeNotificationPreferencesFromJSON(json['notification_preferences']),
    };
}

export function MeOutToJSON(json: any): MeOut {
    return MeOutToJSONTyped(json, false);
}

export function MeOutToJSONTyped(value?: MeOut | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email': value['email'],
        'full_name': value['fullName'],
        'picture_url': value['pictureUrl'],
        'locale': value['locale'],
        'notification_preferences': MeNotificationPreferencesToJSON(value['notificationPreferences']),
    };
}

