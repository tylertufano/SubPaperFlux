/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiTokenWithSecret
 */
export interface ApiTokenWithSecret {
    /**
     * 
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    description?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiTokenWithSecret
     */
    scopes?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    lastUsedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    expiresAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    revokedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    token: string;
}

/**
 * Check if a given object implements the ApiTokenWithSecret interface.
 */
export function instanceOfApiTokenWithSecret(value: object): value is ApiTokenWithSecret {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function ApiTokenWithSecretFromJSON(json: any): ApiTokenWithSecret {
    return ApiTokenWithSecretFromJSONTyped(json, false);
}

export function ApiTokenWithSecretFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiTokenWithSecret {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'lastUsedAt': json['last_used_at'] == null ? undefined : (new Date(json['last_used_at'])),
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
        'revokedAt': json['revoked_at'] == null ? undefined : (new Date(json['revoked_at'])),
        'token': json['token'],
    };
}

export function ApiTokenWithSecretToJSON(json: any): ApiTokenWithSecret {
    return ApiTokenWithSecretToJSONTyped(json, false);
}

export function ApiTokenWithSecretToJSONTyped(value?: ApiTokenWithSecret | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'scopes': value['scopes'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'last_used_at': value['lastUsedAt'] === null ? null : ((value['lastUsedAt'] as any)?.toISOString()),
        'expires_at': value['expiresAt'] === null ? null : ((value['expiresAt'] as any)?.toISOString()),
        'revoked_at': value['revokedAt'] === null ? null : ((value['revokedAt'] as any)?.toISOString()),
        'token': value['token'],
    };
}

