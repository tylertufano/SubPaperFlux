/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdminUserOrganizationMembership
 */
export interface AdminUserOrganizationMembership {
    /**
     * 
     * @type {any}
     * @memberof AdminUserOrganizationMembership
     */
    organizationId: any | null;
    /**
     * 
     * @type {any}
     * @memberof AdminUserOrganizationMembership
     */
    organizationSlug: any | null;
    /**
     * 
     * @type {any}
     * @memberof AdminUserOrganizationMembership
     */
    organizationName: any | null;
    /**
     * 
     * @type {any}
     * @memberof AdminUserOrganizationMembership
     */
    organizationDescription?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AdminUserOrganizationMembership
     */
    organizationIsDefault?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AdminUserOrganizationMembership
     */
    joinedAt: any | null;
}

/**
 * Check if a given object implements the AdminUserOrganizationMembership interface.
 */
export function instanceOfAdminUserOrganizationMembership(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "organizationId" in value;
    isInstance = isInstance && "organizationSlug" in value;
    isInstance = isInstance && "organizationName" in value;
    isInstance = isInstance && "joinedAt" in value;

    return isInstance;
}

export function AdminUserOrganizationMembershipFromJSON(json: any): AdminUserOrganizationMembership {
    return AdminUserOrganizationMembershipFromJSONTyped(json, false);
}

export function AdminUserOrganizationMembershipFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUserOrganizationMembership {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organizationId': json['organization_id'],
        'organizationSlug': json['organization_slug'],
        'organizationName': json['organization_name'],
        'organizationDescription': !exists(json, 'organization_description') ? undefined : json['organization_description'],
        'organizationIsDefault': !exists(json, 'organization_is_default') ? undefined : json['organization_is_default'],
        'joinedAt': json['joined_at'],
    };
}

export function AdminUserOrganizationMembershipToJSON(value?: AdminUserOrganizationMembership | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organization_id': value.organizationId,
        'organization_slug': value.organizationSlug,
        'organization_name': value.organizationName,
        'organization_description': value.organizationDescription,
        'organization_is_default': value.organizationIsDefault,
        'joined_at': value.joinedAt,
    };
}

