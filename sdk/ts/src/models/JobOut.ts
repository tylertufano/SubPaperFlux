/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface JobOut
 */
export interface JobOut {
    /**
     * 
     * @type {string}
     * @memberof JobOut
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof JobOut
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof JobOut
     */
    status: string;
    /**
     * 
     * @type {number}
     * @memberof JobOut
     */
    attempts: number;
    /**
     * 
     * @type {string}
     * @memberof JobOut
     */
    lastError?: string | null;
    /**
     * 
     * @type {number}
     * @memberof JobOut
     */
    availableAt?: number | null;
    /**
     * 
     * @type {string}
     * @memberof JobOut
     */
    ownerUserId?: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof JobOut
     */
    payload: { [key: string]: any; };
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof JobOut
     */
    details?: { [key: string]: any; };
}

/**
 * Check if a given object implements the JobOut interface.
 */
export function instanceOfJobOut(value: object): value is JobOut {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('attempts' in value) || value['attempts'] === undefined) return false;
    if (!('payload' in value) || value['payload'] === undefined) return false;
    return true;
}

export function JobOutFromJSON(json: any): JobOut {
    return JobOutFromJSONTyped(json, false);
}

export function JobOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobOut {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'status': json['status'],
        'attempts': json['attempts'],
        'lastError': json['last_error'] == null ? undefined : json['last_error'],
        'availableAt': json['available_at'] == null ? undefined : json['available_at'],
        'ownerUserId': json['owner_user_id'] == null ? undefined : json['owner_user_id'],
        'payload': json['payload'],
        'details': json['details'] == null ? undefined : json['details'],
    };
}

export function JobOutToJSON(json: any): JobOut {
    return JobOutToJSONTyped(json, false);
}

export function JobOutToJSONTyped(value?: JobOut | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'status': value['status'],
        'attempts': value['attempts'],
        'last_error': value['lastError'],
        'available_at': value['availableAt'],
        'owner_user_id': value['ownerUserId'],
        'payload': value['payload'],
        'details': value['details'],
    };
}
