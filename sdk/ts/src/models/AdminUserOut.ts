/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdminUserOut
 */
export interface AdminUserOut {
    /**
     * 
     * @type {string}
     * @memberof AdminUserOut
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AdminUserOut
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AdminUserOut
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AdminUserOut
     */
    pictureUrl?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof AdminUserOut
     */
    isActive: boolean;
    /**
     * 
     * @type {Date}
     * @memberof AdminUserOut
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdminUserOut
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdminUserOut
     */
    lastLoginAt?: Date | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AdminUserOut
     */
    groups?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof AdminUserOut
     */
    roles?: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof AdminUserOut
     */
    isAdmin?: boolean;
    /**
     *
     * @type {number}
     * @memberof AdminUserOut
     */
    quotaCredentials?: number | null;
    /**
     *
     * @type {number}
     * @memberof AdminUserOut
     */
    quotaSiteConfigs?: number | null;
    /**
     *
     * @type {number}
     * @memberof AdminUserOut
     */
    quotaFeeds?: number | null;
    /**
     *
     * @type {number}
     * @memberof AdminUserOut
     */
    quotaApiTokens?: number | null;
}

/**
 * Check if a given object implements the AdminUserOut interface.
 */
export function instanceOfAdminUserOut(value: object): value is AdminUserOut {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function AdminUserOutFromJSON(json: any): AdminUserOut {
    return AdminUserOutFromJSONTyped(json, false);
}

export function AdminUserOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUserOut {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': json['email'] == null ? undefined : json['email'],
        'fullName': json['full_name'] == null ? undefined : json['full_name'],
        'pictureUrl': json['picture_url'] == null ? undefined : json['picture_url'],
        'isActive': json['is_active'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'lastLoginAt': json['last_login_at'] == null ? undefined : (new Date(json['last_login_at'])),
        'groups': json['groups'] == null ? undefined : json['groups'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'isAdmin': json['is_admin'] == null ? undefined : json['is_admin'],
        'quotaCredentials': json['quota_credentials'] == null ? undefined : json['quota_credentials'],
        'quotaSiteConfigs': json['quota_site_configs'] == null ? undefined : json['quota_site_configs'],
        'quotaFeeds': json['quota_feeds'] == null ? undefined : json['quota_feeds'],
        'quotaApiTokens': json['quota_api_tokens'] == null ? undefined : json['quota_api_tokens'],
    };
}

export function AdminUserOutToJSON(json: any): AdminUserOut {
    return AdminUserOutToJSONTyped(json, false);
}

export function AdminUserOutToJSONTyped(value?: AdminUserOut | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email': value['email'],
        'full_name': value['fullName'],
        'picture_url': value['pictureUrl'],
        'is_active': value['isActive'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'last_login_at': value['lastLoginAt'] === null ? null : ((value['lastLoginAt'] as any)?.toISOString()),
        'groups': value['groups'],
        'roles': value['roles'],
        'is_admin': value['isAdmin'],
        'quota_credentials': value['quotaCredentials'],
        'quota_site_configs': value['quotaSiteConfigs'],
        'quota_feeds': value['quotaFeeds'],
        'quota_api_tokens': value['quotaApiTokens'],
    };
}

