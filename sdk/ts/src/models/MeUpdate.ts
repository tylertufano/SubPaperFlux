/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MeNotificationPreferencesUpdate } from './MeNotificationPreferencesUpdate';
import {
    MeNotificationPreferencesUpdateFromJSON,
    MeNotificationPreferencesUpdateFromJSONTyped,
    MeNotificationPreferencesUpdateToJSON,
    MeNotificationPreferencesUpdateToJSONTyped,
} from './MeNotificationPreferencesUpdate';

/**
 * 
 * @export
 * @interface MeUpdate
 */
export interface MeUpdate {
    /**
     * 
     * @type {string}
     * @memberof MeUpdate
     */
    locale?: string | null;
    /**
     * 
     * @type {MeNotificationPreferencesUpdate}
     * @memberof MeUpdate
     */
    notificationPreferences?: MeNotificationPreferencesUpdate | null;
}

/**
 * Check if a given object implements the MeUpdate interface.
 */
export function instanceOfMeUpdate(value: object): value is MeUpdate {
    return true;
}

export function MeUpdateFromJSON(json: any): MeUpdate {
    return MeUpdateFromJSONTyped(json, false);
}

export function MeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'locale': json['locale'] == null ? undefined : json['locale'],
        'notificationPreferences': json['notification_preferences'] == null ? undefined : MeNotificationPreferencesUpdateFromJSON(json['notification_preferences']),
    };
}

export function MeUpdateToJSON(json: any): MeUpdate {
    return MeUpdateToJSONTyped(json, false);
}

export function MeUpdateToJSONTyped(value?: MeUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'locale': value['locale'],
        'notification_preferences': MeNotificationPreferencesUpdateToJSON(value['notificationPreferences']),
    };
}

