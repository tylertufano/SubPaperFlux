/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SiteConfigApiOut } from './SiteConfigApiOut';
import type { SiteConfigSeleniumOut } from './SiteConfigSeleniumOut';
import { SiteConfigApiOutFromJSONTyped, SiteConfigApiOutToJSON } from './SiteConfigApiOut';
import { SiteConfigSeleniumOutFromJSONTyped, SiteConfigSeleniumOutToJSON } from './SiteConfigSeleniumOut';

/**
 * @type ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost
 * 
 * @export
 */
export type ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost = { loginType: 'api' } & SiteConfigApiOut | { loginType: 'selenium' } & SiteConfigSeleniumOut;

export function ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPostFromJSON(json: any): ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost {
    return ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPostFromJSONTyped(json, false);
}

export function ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost {
    if (json == null) {
        return json;
    }
    switch (json['login_type']) {
        case 'api':
            return Object.assign({}, SiteConfigApiOutFromJSONTyped(json, true), { loginType: 'api' } as const);
        case 'selenium':
            return Object.assign({}, SiteConfigSeleniumOutFromJSONTyped(json, true), { loginType: 'selenium' } as const);
        default:
            return json;
    }
}

export function ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPostToJSON(json: any): any {
    return ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPostToJSONTyped(json, false);
}

export function ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPostToJSONTyped(value?: ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['loginType']) {
        case 'api':
            return Object.assign({}, SiteConfigApiOutToJSON(value as SiteConfigApiOut), { loginType: 'api' } as const);
        case 'selenium':
            return Object.assign({}, SiteConfigSeleniumOutToJSON(value as SiteConfigSeleniumOut), { loginType: 'selenium' } as const);
        default:
            return value;
    }
}

