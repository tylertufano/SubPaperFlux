/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Credential
 */
export interface Credential {
    /**
     * 
     * @type {any}
     * @memberof Credential
     */
    id?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Credential
     */
    kind: any | null;
    /**
     * 
     * @type {any}
     * @memberof Credential
     */
    description: any | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof Credential
     */
    data: { [key: string]: any; } | null;
    /**
     * 
     * @type {any}
     * @memberof Credential
     */
    ownerUserId?: any | null;
}

/**
 * Check if a given object implements the Credential interface.
 */
export function instanceOfCredential(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function CredentialFromJSON(json: any): Credential {
    return CredentialFromJSONTyped(json, false);
}

export function CredentialFromJSONTyped(json: any, ignoreDiscriminator: boolean): Credential {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'kind': json['kind'],
        'description': json['description'],
        'data': json['data'],
        'ownerUserId': !exists(json, 'owner_user_id') ? undefined : json['owner_user_id'],
    };
}

export function CredentialToJSON(value?: Credential | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'kind': value.kind,
        'description': value.description,
        'data': value.data,
        'owner_user_id': value.ownerUserId,
    };
}

