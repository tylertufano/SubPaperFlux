/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TemplateCategory } from './TemplateCategory';
import {
    TemplateCategoryFromJSON,
    TemplateCategoryFromJSONTyped,
    TemplateCategoryToJSON,
    TemplateCategoryToJSONTyped,
} from './TemplateCategory';
import type { TemplateMetadata } from './TemplateMetadata';
import {
    TemplateMetadataFromJSON,
    TemplateMetadataFromJSONTyped,
    TemplateMetadataToJSON,
    TemplateMetadataToJSONTyped,
} from './TemplateMetadata';

/**
 * 
 * @export
 * @interface TemplateListResponse
 */
export interface TemplateListResponse {
    /**
     * Available template definitions
     * @type {Array<TemplateMetadata>}
     * @memberof TemplateListResponse
     */
    templates?: Array<TemplateMetadata>;
    /**
     * Filter categories for the templates
     * @type {Array<TemplateCategory>}
     * @memberof TemplateListResponse
     */
    categories?: Array<TemplateCategory>;
}

/**
 * Check if a given object implements the TemplateListResponse interface.
 */
export function instanceOfTemplateListResponse(value: object): value is TemplateListResponse {
    return true;
}

export function TemplateListResponseFromJSON(json: any): TemplateListResponse {
    return TemplateListResponseFromJSONTyped(json, false);
}

export function TemplateListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'templates': json['templates'] == null ? undefined : ((json['templates'] as Array<any>).map(TemplateMetadataFromJSON)),
        'categories': json['categories'] == null ? undefined : ((json['categories'] as Array<any>).map(TemplateCategoryFromJSON)),
    };
}

export function TemplateListResponseToJSON(json: any): TemplateListResponse {
    return TemplateListResponseToJSONTyped(json, false);
}

export function TemplateListResponseToJSONTyped(value?: TemplateListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'templates': value['templates'] == null ? undefined : ((value['templates'] as Array<any>).map(TemplateMetadataToJSON)),
        'categories': value['categories'] == null ? undefined : ((value['categories'] as Array<any>).map(TemplateCategoryToJSON)),
    };
}

