/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the BookmarkOut interface.
 */
export function instanceOfBookmarkOut(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('instapaperBookmarkId' in value) || value['instapaperBookmarkId'] === undefined)
        return false;
    return true;
}
export function BookmarkOutFromJSON(json) {
    return BookmarkOutFromJSONTyped(json, false);
}
export function BookmarkOutFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'instapaperBookmarkId': json['instapaper_bookmark_id'],
        'title': json['title'] == null ? undefined : json['title'],
        'url': json['url'] == null ? undefined : json['url'],
        'contentLocation': json['content_location'] == null ? undefined : json['content_location'],
        'feedId': json['feed_id'] == null ? undefined : json['feed_id'],
        'publishedAt': json['published_at'] == null ? undefined : json['published_at'],
    };
}
export function BookmarkOutToJSON(json) {
    return BookmarkOutToJSONTyped(json, false);
}
export function BookmarkOutToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'instapaper_bookmark_id': value['instapaperBookmarkId'],
        'title': value['title'],
        'url': value['url'],
        'content_location': value['contentLocation'],
        'feed_id': value['feedId'],
        'published_at': value['publishedAt'],
    };
}
