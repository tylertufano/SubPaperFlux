/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { StatusResponseFromJSON, } from '../models/index';
/**
 *
 */
export class StatusApi extends runtime.BaseAPI {
    /**
     * Db Status
     */
    dbStatusStatusDbGetRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            let urlPath = `/status/db`;
            const response = yield this.request({
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Db Status
     */
    dbStatusStatusDbGet(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.dbStatusStatusDbGetRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Db Status
     */
    dbStatusV1StatusDbGetRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            let urlPath = `/v1/status/db`;
            const response = yield this.request({
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Db Status
     */
    dbStatusV1StatusDbGet(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.dbStatusV1StatusDbGetRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get Status
     */
    getStatusStatusGetRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            let urlPath = `/status`;
            const response = yield this.request({
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => StatusResponseFromJSON(jsonValue));
        });
    }
    /**
     * Get Status
     */
    getStatusStatusGet(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getStatusStatusGetRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get Status
     */
    getStatusV1StatusGetRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            let urlPath = `/v1/status`;
            const response = yield this.request({
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => StatusResponseFromJSON(jsonValue));
        });
    }
    /**
     * Get Status
     */
    getStatusV1StatusGet(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getStatusV1StatusGetRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Integrations Status
     */
    integrationsStatusStatusIntegrationsGetRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['instapaperCredId'] != null) {
                queryParameters['instapaper_cred_id'] = requestParameters['instapaperCredId'];
            }
            if (requestParameters['minifluxCredId'] != null) {
                queryParameters['miniflux_cred_id'] = requestParameters['minifluxCredId'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            let urlPath = `/status/integrations`;
            const response = yield this.request({
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Integrations Status
     */
    integrationsStatusStatusIntegrationsGet(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.integrationsStatusStatusIntegrationsGetRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Integrations Status
     */
    integrationsStatusV1StatusIntegrationsGetRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['instapaperCredId'] != null) {
                queryParameters['instapaper_cred_id'] = requestParameters['instapaperCredId'];
            }
            if (requestParameters['minifluxCredId'] != null) {
                queryParameters['miniflux_cred_id'] = requestParameters['minifluxCredId'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            let urlPath = `/v1/status/integrations`;
            const response = yield this.request({
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Integrations Status
     */
    integrationsStatusV1StatusIntegrationsGet(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.integrationsStatusV1StatusIntegrationsGetRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
