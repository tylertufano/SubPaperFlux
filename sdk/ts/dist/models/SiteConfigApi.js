"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SiteConfigApiToJSON = exports.SiteConfigApiFromJSONTyped = exports.SiteConfigApiFromJSON = exports.instanceOfSiteConfigApi = void 0;
const runtime_1 = require("../runtime");
const ApiConfig_1 = require("./ApiConfig");
/**
 * Check if a given object implements the SiteConfigApi interface.
 */
function instanceOfSiteConfigApi(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "siteUrl" in value;
    isInstance = isInstance && "ownerUserId" in value;
    isInstance = isInstance && "apiConfig" in value;
    return isInstance;
}
exports.instanceOfSiteConfigApi = instanceOfSiteConfigApi;
function SiteConfigApiFromJSON(json) {
    return SiteConfigApiFromJSONTyped(json, false);
}
exports.SiteConfigApiFromJSON = SiteConfigApiFromJSON;
function SiteConfigApiFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': json['name'],
        'siteUrl': json['site_url'],
        'ownerUserId': json['owner_user_id'],
        'successTextClass': !(0, runtime_1.exists)(json, 'success_text_class') ? undefined : json['success_text_class'],
        'expectedSuccessText': !(0, runtime_1.exists)(json, 'expected_success_text') ? undefined : json['expected_success_text'],
        'requiredCookies': !(0, runtime_1.exists)(json, 'required_cookies') ? undefined : json['required_cookies'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'loginType': !(0, runtime_1.exists)(json, 'login_type') ? undefined : json['login_type'],
        'apiConfig': (0, ApiConfig_1.ApiConfigFromJSON)(json['api_config']),
    };
}
exports.SiteConfigApiFromJSONTyped = SiteConfigApiFromJSONTyped;
function SiteConfigApiToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'site_url': value.siteUrl,
        'owner_user_id': value.ownerUserId,
        'success_text_class': value.successTextClass,
        'expected_success_text': value.expectedSuccessText,
        'required_cookies': value.requiredCookies,
        'id': value.id,
        'login_type': value.loginType,
        'api_config': (0, ApiConfig_1.ApiConfigToJSON)(value.apiConfig),
    };
}
exports.SiteConfigApiToJSON = SiteConfigApiToJSON;
