"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAdminUserOut = instanceOfAdminUserOut;
exports.AdminUserOutFromJSON = AdminUserOutFromJSON;
exports.AdminUserOutFromJSONTyped = AdminUserOutFromJSONTyped;
exports.AdminUserOutToJSON = AdminUserOutToJSON;
exports.AdminUserOutToJSONTyped = AdminUserOutToJSONTyped;
const AdminUserRoleOverrides_1 = require("./AdminUserRoleOverrides");
const AdminUserOrganization_1 = require("./AdminUserOrganization");
const AdminUserOrganizationMembership_1 = require("./AdminUserOrganizationMembership");
/**
 * Check if a given object implements the AdminUserOut interface.
 */
function instanceOfAdminUserOut(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('isActive' in value) || value['isActive'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function AdminUserOutFromJSON(json) {
    return AdminUserOutFromJSONTyped(json, false);
}
function AdminUserOutFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'email': json['email'] == null ? undefined : json['email'],
        'fullName': json['full_name'] == null ? undefined : json['full_name'],
        'pictureUrl': json['picture_url'] == null ? undefined : json['picture_url'],
        'isActive': json['is_active'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'lastLoginAt': json['last_login_at'] == null ? undefined : (new Date(json['last_login_at'])),
        'groups': json['groups'] == null ? undefined : json['groups'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'isAdmin': json['is_admin'] == null ? undefined : json['is_admin'],
        'quotaCredentials': json['quota_credentials'] == null ? undefined : json['quota_credentials'],
        'quotaSiteConfigs': json['quota_site_configs'] == null ? undefined : json['quota_site_configs'],
        'quotaFeeds': json['quota_feeds'] == null ? undefined : json['quota_feeds'],
        'quotaApiTokens': json['quota_api_tokens'] == null ? undefined : json['quota_api_tokens'],
        'roleOverrides': json['role_overrides'] == null ? undefined : (0, AdminUserRoleOverrides_1.AdminUserRoleOverridesFromJSON)(json['role_overrides']),
        'organizationIds': json['organization_ids'] == null ? undefined : json['organization_ids'],
        'organizationMemberships': json['organization_memberships'] == null ? undefined : (json['organization_memberships'].map(AdminUserOrganizationMembership_1.AdminUserOrganizationMembershipFromJSON)),
        'organizations': json['organizations'] == null ? undefined : (json['organizations'].map(AdminUserOrganization_1.AdminUserOrganizationFromJSON)),
    };
}
function AdminUserOutToJSON(json) {
    return AdminUserOutToJSONTyped(json, false);
}
function AdminUserOutToJSONTyped(value, ignoreDiscriminator = false) {
    var _a;
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'email': value['email'],
        'full_name': value['fullName'],
        'picture_url': value['pictureUrl'],
        'is_active': value['isActive'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'last_login_at': value['lastLoginAt'] === null ? null : ((_a = value['lastLoginAt']) === null || _a === void 0 ? void 0 : _a.toISOString()),
        'groups': value['groups'],
        'roles': value['roles'],
        'is_admin': value['isAdmin'],
        'quota_credentials': value['quotaCredentials'],
        'quota_site_configs': value['quotaSiteConfigs'],
        'quota_feeds': value['quotaFeeds'],
        'quota_api_tokens': value['quotaApiTokens'],
        'role_overrides': (0, AdminUserRoleOverrides_1.AdminUserRoleOverridesToJSON)(value['roleOverrides']),
        'organization_ids': value['organizationIds'],
        'organization_memberships': value['organizationMemberships'] == null ? undefined : (value['organizationMemberships'].map(AdminUserOrganizationMembership_1.AdminUserOrganizationMembershipToJSON)),
        'organizations': value['organizations'] == null ? undefined : (value['organizations'].map(AdminUserOrganization_1.AdminUserOrganizationToJSON)),
    };
}
