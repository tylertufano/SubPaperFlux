"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeedsPageToJSONTyped = exports.FeedsPageToJSON = exports.FeedsPageFromJSONTyped = exports.FeedsPageFromJSON = exports.instanceOfFeedsPage = void 0;
const FeedOut_1 = require("./FeedOut");
/**
 * Check if a given object implements the FeedsPage interface.
 */
function instanceOfFeedsPage(value) {
    if (!('items' in value) || value['items'] === undefined)
        return false;
    if (!('total' in value) || value['total'] === undefined)
        return false;
    if (!('page' in value) || value['page'] === undefined)
        return false;
    if (!('size' in value) || value['size'] === undefined)
        return false;
    return true;
}
exports.instanceOfFeedsPage = instanceOfFeedsPage;
function FeedsPageFromJSON(json) {
    return FeedsPageFromJSONTyped(json, false);
}
exports.FeedsPageFromJSON = FeedsPageFromJSON;
function FeedsPageFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'items': (json['items'].map(FeedOut_1.FeedOutFromJSON)),
        'total': json['total'],
        'page': json['page'],
        'size': json['size'],
        'hasNext': json['has_next'] == null ? undefined : json['has_next'],
        'totalPages': json['total_pages'] == null ? undefined : json['total_pages'],
    };
}
exports.FeedsPageFromJSONTyped = FeedsPageFromJSONTyped;
function FeedsPageToJSON(json) {
    return FeedsPageToJSONTyped(json, false);
}
exports.FeedsPageToJSON = FeedsPageToJSON;
function FeedsPageToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'items': (value['items'].map(FeedOut_1.FeedOutToJSON)),
        'total': value['total'],
        'page': value['page'],
        'size': value['size'],
        'has_next': value['hasNext'],
        'total_pages': value['totalPages'],
    };
}
exports.FeedsPageToJSONTyped = FeedsPageToJSONTyped;
