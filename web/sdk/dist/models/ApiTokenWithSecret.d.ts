/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ApiTokenWithSecret
 */
export interface ApiTokenWithSecret {
    /**
     *
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    description?: string | null;
    /**
     *
     * @type {Array<string>}
     * @memberof ApiTokenWithSecret
     */
    scopes?: Array<string>;
    /**
     *
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    updatedAt: Date;
    /**
     *
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    lastUsedAt?: Date | null;
    /**
     *
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    expiresAt?: Date | null;
    /**
     *
     * @type {Date}
     * @memberof ApiTokenWithSecret
     */
    revokedAt?: Date | null;
    /**
     *
     * @type {string}
     * @memberof ApiTokenWithSecret
     */
    token: string;
}
/**
 * Check if a given object implements the ApiTokenWithSecret interface.
 */
export declare function instanceOfApiTokenWithSecret(value: object): value is ApiTokenWithSecret;
export declare function ApiTokenWithSecretFromJSON(json: any): ApiTokenWithSecret;
export declare function ApiTokenWithSecretFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiTokenWithSecret;
export declare function ApiTokenWithSecretToJSON(json: any): ApiTokenWithSecret;
export declare function ApiTokenWithSecretToJSONTyped(value?: ApiTokenWithSecret | null, ignoreDiscriminator?: boolean): any;
