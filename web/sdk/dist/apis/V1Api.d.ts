/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AdminOrganizationCreate, AdminOrganizationDetail, AdminOrganizationMembershipChange, AdminOrganizationUpdate, AdminOrganizationsPage, AdminRoleCreate, AdminRoleDetail, AdminRoleUpdate, AdminRolesPage, AdminUserOut, AdminUserRoleOverridesUpdate, AdminUserUpdate, AdminUsersPage, ApiTokenCreate, ApiTokenOut, ApiTokenWithSecret, ApiTokensPage, AuditLogsPage, BookmarkFolderSummary, BookmarkFolderUpdate, BookmarkOut, BookmarkTagSummary, BookmarkTagsUpdate, BookmarksPage, BulkBookmarkFolderUpdate, BulkBookmarkTagUpdate, Credential, CredentialsPage, FeedsPage, FolderCreate, FolderOut, FolderUpdate, JobOut, JobRequest, JobScheduleCreate, JobScheduleOut, JobScheduleUpdate, JobSchedulesPage, JobsPage, MeOut, MeUpdate, ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost, RoleGrantRequest, SiteConfigsPage, SiteSetupStatusOut, SiteSetupStatusUpdate, SiteWelcomeSettingOut, SiteWelcomeSettingUpdate, StatusResponse, TagCreate, TagOut, TagUpdate, TemplateListResponse } from '../models/index';
export interface AddOrganizationMemberV1AdminOrgsOrganizationIdMembersPostRequest {
    organizationId: string;
    adminOrganizationMembershipChange: AdminOrganizationMembershipChange;
}
export interface BulkDeleteBookmarksV1BookmarksBulkDeletePostRequest {
    requestBody: {
        [key: string]: any;
    };
    xCsrfToken?: string | null;
}
export interface BulkPublishBookmarksV1BookmarksBulkPublishPostRequest {
    requestBody: {
        [key: string]: any;
    };
    xCsrfToken?: string | null;
}
export interface BulkUpdateBookmarkFoldersV1BookmarksBulkFoldersPostRequest {
    bulkBookmarkFolderUpdate: BulkBookmarkFolderUpdate;
    xCsrfToken?: string | null;
}
export interface BulkUpdateBookmarkTagsV1BookmarksBulkTagsPostRequest {
    bulkBookmarkTagUpdate: BulkBookmarkTagUpdate;
    xCsrfToken?: string | null;
}
export interface ClearUserRoleOverridesV1AdminUsersUserIdRoleOverridesDeleteRequest {
    userId: string;
}
export interface CopyCredentialV1CredentialsCredIdCopyPostRequest {
    credId: string;
}
export interface CopySiteConfigV1V1SiteConfigsConfigIdCopyPostRequest {
    configId: string;
}
export interface CountBookmarksV1BookmarksCountGetRequest {
    feedId?: string | null;
    tagId?: string | null;
    folderId?: string | null;
    since?: string | null;
    until?: string | null;
    search?: string | null;
    titleQuery?: string | null;
    urlQuery?: string | null;
    regex?: string | null;
    regexTarget?: string | null;
    regexFlags?: string | null;
    size?: number;
}
export interface CreateFolderV1BookmarksFoldersPostRequest {
    folderCreate: FolderCreate;
    xCsrfToken?: string | null;
}
export interface CreateJobScheduleV1JobSchedulesPostRequest {
    jobScheduleCreate: JobScheduleCreate;
}
export interface CreateJobScheduleV1JobSchedulesPost0Request {
    jobScheduleCreate: JobScheduleCreate;
}
export interface CreateOrganizationV1AdminOrgsPostRequest {
    adminOrganizationCreate: AdminOrganizationCreate;
}
export interface CreateRoleV1AdminRolesPostRequest {
    adminRoleCreate: AdminRoleCreate;
}
export interface CreateTagV1BookmarksTagsPostRequest {
    tagCreate: TagCreate;
    xCsrfToken?: string | null;
}
export interface CreateTokenV1MeTokensPostRequest {
    apiTokenCreate: ApiTokenCreate;
}
export interface DeleteBookmarkFolderV1BookmarksBookmarkIdFolderDeleteRequest {
    bookmarkId: string;
    xCsrfToken?: string | null;
}
export interface DeleteBookmarkV1BookmarksBookmarkIdDeleteRequest {
    bookmarkId: string;
    deleteRemote?: boolean;
    xCsrfToken?: string | null;
}
export interface DeleteFolderV1BookmarksFoldersFolderIdDeleteRequest {
    folderId: string;
    xCsrfToken?: string | null;
}
export interface DeleteJobScheduleV1JobSchedulesScheduleIdDeleteRequest {
    scheduleId: string;
}
export interface DeleteOrganizationV1AdminOrgsOrganizationIdDeleteRequest {
    organizationId: string;
}
export interface DeleteRoleV1AdminRolesRoleIdDeleteRequest {
    roleId: string;
}
export interface DeleteTagV1BookmarksTagsTagIdDeleteRequest {
    tagId: string;
    xCsrfToken?: string | null;
}
export interface DownloadTemplateV1TemplatesTemplateIdDownloadGetRequest {
    templateId: string;
}
export interface EnqueueJobV1JobsPostRequest {
    jobRequest: JobRequest;
}
export interface ExportBookmarksV1BookmarksExportGetRequest {
    format?: string;
    search?: string | null;
    fuzzy?: boolean;
    feedId?: string | null;
    tagId?: string | null;
    folderId?: string | null;
    since?: string | null;
    until?: string | null;
    sortBy?: string | null;
    sortDir?: string | null;
    titleQuery?: string | null;
    urlQuery?: string | null;
    regex?: string | null;
    regexTarget?: string | null;
    regexFlags?: string | null;
}
export interface GetBookmarkFolderV1BookmarksBookmarkIdFolderGetRequest {
    bookmarkId: string;
}
export interface GetBookmarkTagsV1BookmarksBookmarkIdTagsGetRequest {
    bookmarkId: string;
}
export interface GetBookmarkV1BookmarksBookmarkIdGetRequest {
    bookmarkId: string;
}
export interface GetJobScheduleV1JobSchedulesScheduleIdGetRequest {
    scheduleId: string;
}
export interface GetJobV1JobsJobIdGetRequest {
    jobId: string;
}
export interface GetOrganizationV1AdminOrgsOrganizationIdGetRequest {
    organizationId: string;
}
export interface GetRoleV1AdminRolesRoleIdGetRequest {
    roleId: string;
}
export interface GetTokenV1MeTokensTokenIdGetRequest {
    tokenId: string;
}
export interface GetUserV1AdminUsersUserIdGetRequest {
    userId: string;
}
export interface GrantUserRoleV1AdminUsersUserIdRolesRoleNamePostRequest {
    userId: string;
    roleName: string;
    roleGrantRequest?: RoleGrantRequest;
}
export interface HeadBookmarksV1BookmarksHeadRequest {
    search?: string | null;
    feedId?: string | null;
    tagId?: string | null;
    folderId?: string | null;
    since?: string | null;
    until?: string | null;
    titleQuery?: string | null;
    urlQuery?: string | null;
    regex?: string | null;
    regexTarget?: string | null;
    regexFlags?: string | null;
}
export interface HeadBookmarksV1BookmarksHead0Request {
    search?: string | null;
    feedId?: string | null;
    tagId?: string | null;
    folderId?: string | null;
    since?: string | null;
    until?: string | null;
    titleQuery?: string | null;
    urlQuery?: string | null;
    regex?: string | null;
    regexTarget?: string | null;
    regexFlags?: string | null;
}
export interface IntegrationsStatusV1StatusIntegrationsGetRequest {
    instapaperCredId?: string | null;
    minifluxCredId?: string | null;
}
export interface ListAuditLogsV1AdminAuditGetRequest {
    page?: number;
    size?: number;
    entityType?: string | null;
    entityId?: string | null;
    action?: string | null;
    ownerUserId?: string | null;
    actorUserId?: string | null;
    since?: Date | null;
    until?: Date | null;
}
export interface ListBookmarksV1BookmarksGetRequest {
    page?: number;
    size?: number;
    search?: string | null;
    fuzzy?: boolean;
    feedId?: string | null;
    tagId?: string | null;
    folderId?: string | null;
    since?: string | null;
    until?: string | null;
    sortBy?: string | null;
    sortDir?: string | null;
    titleQuery?: string | null;
    urlQuery?: string | null;
    regex?: string | null;
    regexTarget?: string | null;
    regexFlags?: string | null;
}
export interface ListBookmarksV1BookmarksGet0Request {
    page?: number;
    size?: number;
    search?: string | null;
    fuzzy?: boolean;
    feedId?: string | null;
    tagId?: string | null;
    folderId?: string | null;
    since?: string | null;
    until?: string | null;
    sortBy?: string | null;
    sortDir?: string | null;
    titleQuery?: string | null;
    urlQuery?: string | null;
    regex?: string | null;
    regexTarget?: string | null;
    regexFlags?: string | null;
}
export interface ListCredentialsV1V1CredentialsGetRequest {
    includeGlobal?: boolean;
    kind?: string | null;
    page?: number;
    size?: number;
}
export interface ListCredentialsV1V1CredentialsGet0Request {
    includeGlobal?: boolean;
    kind?: string | null;
    page?: number;
    size?: number;
}
export interface ListFeedsV1V1FeedsGetRequest {
    ownerUserIds?: Array<string> | null;
    page?: number;
    size?: number;
}
export interface ListFeedsV1V1FeedsGet0Request {
    ownerUserIds?: Array<string> | null;
    page?: number;
    size?: number;
}
export interface ListJobSchedulesV1JobSchedulesGetRequest {
    ownerUserId?: Array<string> | null;
    jobType?: string | null;
    isActive?: boolean | null;
    page?: number;
    size?: number;
}
export interface ListJobSchedulesV1JobSchedulesGet0Request {
    ownerUserId?: Array<string> | null;
    jobType?: string | null;
    isActive?: boolean | null;
    page?: number;
    size?: number;
}
export interface ListJobsV1JobsGetRequest {
    status?: string | null;
    jobType?: string | null;
    page?: number;
    size?: number;
    orderBy?: string;
    orderDir?: string;
}
export interface ListJobsV1JobsGet0Request {
    status?: string | null;
    jobType?: string | null;
    page?: number;
    size?: number;
    orderBy?: string;
    orderDir?: string;
}
export interface ListOrganizationsV1AdminOrgsGetRequest {
    page?: number;
    size?: number;
    search?: string | null;
    isDefault?: boolean | null;
}
export interface ListRolesV1AdminRolesGetRequest {
    page?: number;
    size?: number;
    search?: string | null;
}
export interface ListSiteConfigsV1V1SiteConfigsGetRequest {
    includeGlobal?: boolean;
    search?: string | null;
    page?: number;
    size?: number;
}
export interface ListTokensV1MeTokensGetRequest {
    page?: number;
    size?: number;
    includeRevoked?: boolean;
}
export interface ListUsersV1AdminUsersGetRequest {
    page?: number;
    size?: number;
    search?: string | null;
    isActive?: boolean | null;
    role?: string | null;
    organizationId?: string | null;
}
export interface PreviewBookmarkV1BookmarksBookmarkIdPreviewGetRequest {
    bookmarkId: string;
}
export interface RemoveOrganizationMemberV1AdminOrgsOrganizationIdMembersUserIdDeleteRequest {
    organizationId: string;
    userId: string;
}
export interface RetryAllJobsV1JobsRetryAllPostRequest {
    requestBody: {
        [key: string]: any;
    };
}
export interface RetryJobV1JobsJobIdRetryPostRequest {
    jobId: string;
}
export interface RevokeTokenV1MeTokensTokenIdDeleteRequest {
    tokenId: string;
}
export interface RevokeUserRoleV1AdminUsersUserIdRolesRoleNameDeleteRequest {
    userId: string;
    roleName: string;
    confirm?: boolean;
}
export interface RunJobScheduleNowV1JobSchedulesScheduleIdRunNowPostRequest {
    scheduleId: string;
}
export interface StreamJobsV1JobsStreamGetRequest {
    status?: string | null;
    jobType?: string | null;
    page?: number;
    size?: number;
    orderBy?: string;
    orderDir?: string;
}
export interface TestInstapaperV1IntegrationsInstapaperTestPostRequest {
    requestBody: {
        [key: string]: any;
    };
}
export interface TestMinifluxV1IntegrationsMinifluxTestPostRequest {
    requestBody: {
        [key: string]: any;
    };
}
export interface TestSiteConfigV1SiteConfigsConfigIdTestPostRequest {
    configId: string;
}
export interface ToggleJobScheduleV1JobSchedulesScheduleIdTogglePostRequest {
    scheduleId: string;
}
export interface UpdateBookmarkFolderV1BookmarksBookmarkIdFolderPutRequest {
    bookmarkId: string;
    bookmarkFolderUpdate: BookmarkFolderUpdate;
    xCsrfToken?: string | null;
}
export interface UpdateBookmarkTagsV1BookmarksBookmarkIdTagsPutRequest {
    bookmarkId: string;
    bookmarkTagsUpdate: BookmarkTagsUpdate;
    xCsrfToken?: string | null;
}
export interface UpdateFolderV1BookmarksFoldersFolderIdPutRequest {
    folderId: string;
    folderUpdate: FolderUpdate;
    xCsrfToken?: string | null;
}
export interface UpdateJobScheduleV1JobSchedulesScheduleIdPatchRequest {
    scheduleId: string;
    jobScheduleUpdate: JobScheduleUpdate;
}
export interface UpdateMeV1MePatchRequest {
    meUpdate: MeUpdate;
}
export interface UpdateOrganizationV1AdminOrgsOrganizationIdPatchRequest {
    organizationId: string;
    adminOrganizationUpdate: AdminOrganizationUpdate;
}
export interface UpdateRoleV1AdminRolesRoleIdPatchRequest {
    roleId: string;
    adminRoleUpdate: AdminRoleUpdate;
}
export interface UpdateSetupStatusV1SiteSettingsSetupStatusPutRequest {
    siteSetupStatusUpdate: SiteSetupStatusUpdate;
}
export interface UpdateTagV1BookmarksTagsTagIdPutRequest {
    tagId: string;
    tagUpdate: TagUpdate;
    xCsrfToken?: string | null;
}
export interface UpdateUserRoleOverridesV1AdminUsersUserIdRoleOverridesPatchRequest {
    userId: string;
    adminUserRoleOverridesUpdate: AdminUserRoleOverridesUpdate;
}
export interface UpdateUserV1AdminUsersUserIdPatchRequest {
    userId: string;
    adminUserUpdate: AdminUserUpdate;
}
export interface UpdateWelcomeSettingV1SiteSettingsWelcomePatchRequest {
    siteWelcomeSettingUpdate: SiteWelcomeSettingUpdate;
}
export interface UpdateWelcomeSettingV1SiteSettingsWelcomePutRequest {
    siteWelcomeSettingUpdate: SiteWelcomeSettingUpdate;
}
export interface ValidateJobPayloadV1JobsValidatePostRequest {
    requestBody: {
        [key: string]: any;
    };
}
/**
 *
 */
export declare class V1Api extends runtime.BaseAPI {
    /**
     * Add a user to an organization
     */
    addOrganizationMemberV1AdminOrgsOrganizationIdMembersPostRaw(requestParameters: AddOrganizationMemberV1AdminOrgsOrganizationIdMembersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminOrganizationDetail>>;
    /**
     * Add a user to an organization
     */
    addOrganizationMemberV1AdminOrgsOrganizationIdMembersPost(requestParameters: AddOrganizationMemberV1AdminOrgsOrganizationIdMembersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminOrganizationDetail>;
    /**
     * Bulk Delete Bookmarks
     */
    bulkDeleteBookmarksV1BookmarksBulkDeletePostRaw(requestParameters: BulkDeleteBookmarksV1BookmarksBulkDeletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Bulk Delete Bookmarks
     */
    bulkDeleteBookmarksV1BookmarksBulkDeletePost(requestParameters: BulkDeleteBookmarksV1BookmarksBulkDeletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Bulk Publish Bookmarks
     */
    bulkPublishBookmarksV1BookmarksBulkPublishPostRaw(requestParameters: BulkPublishBookmarksV1BookmarksBulkPublishPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Bulk Publish Bookmarks
     */
    bulkPublishBookmarksV1BookmarksBulkPublishPost(requestParameters: BulkPublishBookmarksV1BookmarksBulkPublishPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Bulk Update Bookmark Folders
     */
    bulkUpdateBookmarkFoldersV1BookmarksBulkFoldersPostRaw(requestParameters: BulkUpdateBookmarkFoldersV1BookmarksBulkFoldersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<BookmarkFolderSummary>>>;
    /**
     * Bulk Update Bookmark Folders
     */
    bulkUpdateBookmarkFoldersV1BookmarksBulkFoldersPost(requestParameters: BulkUpdateBookmarkFoldersV1BookmarksBulkFoldersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<BookmarkFolderSummary>>;
    /**
     * Bulk Update Bookmark Tags
     */
    bulkUpdateBookmarkTagsV1BookmarksBulkTagsPostRaw(requestParameters: BulkUpdateBookmarkTagsV1BookmarksBulkTagsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<BookmarkTagSummary>>>;
    /**
     * Bulk Update Bookmark Tags
     */
    bulkUpdateBookmarkTagsV1BookmarksBulkTagsPost(requestParameters: BulkUpdateBookmarkTagsV1BookmarksBulkTagsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<BookmarkTagSummary>>;
    /**
     * Clear user role overrides
     */
    clearUserRoleOverridesV1AdminUsersUserIdRoleOverridesDeleteRaw(requestParameters: ClearUserRoleOverridesV1AdminUsersUserIdRoleOverridesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminUserOut>>;
    /**
     * Clear user role overrides
     */
    clearUserRoleOverridesV1AdminUsersUserIdRoleOverridesDelete(requestParameters: ClearUserRoleOverridesV1AdminUsersUserIdRoleOverridesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminUserOut>;
    /**
     * Copy Credential
     */
    copyCredentialV1CredentialsCredIdCopyPostRaw(requestParameters: CopyCredentialV1CredentialsCredIdCopyPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Credential>>;
    /**
     * Copy Credential
     */
    copyCredentialV1CredentialsCredIdCopyPost(requestParameters: CopyCredentialV1CredentialsCredIdCopyPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Credential>;
    /**
     * Copy Site Config V1
     */
    copySiteConfigV1V1SiteConfigsConfigIdCopyPostRaw(requestParameters: CopySiteConfigV1V1SiteConfigsConfigIdCopyPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost>>;
    /**
     * Copy Site Config V1
     */
    copySiteConfigV1V1SiteConfigsConfigIdCopyPost(requestParameters: CopySiteConfigV1V1SiteConfigsConfigIdCopyPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseCopySiteConfigV1V1SiteConfigsConfigIdCopyPost>;
    /**
     * Count Bookmarks
     */
    countBookmarksV1BookmarksCountGetRaw(requestParameters: CountBookmarksV1BookmarksCountGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Count Bookmarks
     */
    countBookmarksV1BookmarksCountGet(requestParameters?: CountBookmarksV1BookmarksCountGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Create Folder
     */
    createFolderV1BookmarksFoldersPostRaw(requestParameters: CreateFolderV1BookmarksFoldersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolderOut>>;
    /**
     * Create Folder
     */
    createFolderV1BookmarksFoldersPost(requestParameters: CreateFolderV1BookmarksFoldersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolderOut>;
    /**
     * Create a job schedule
     */
    createJobScheduleV1JobSchedulesPostRaw(requestParameters: CreateJobScheduleV1JobSchedulesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobScheduleOut>>;
    /**
     * Create a job schedule
     */
    createJobScheduleV1JobSchedulesPost(requestParameters: CreateJobScheduleV1JobSchedulesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobScheduleOut>;
    /**
     * Create a job schedule
     */
    createJobScheduleV1JobSchedulesPost_1Raw(requestParameters: CreateJobScheduleV1JobSchedulesPost0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobScheduleOut>>;
    /**
     * Create a job schedule
     */
    createJobScheduleV1JobSchedulesPost_1(requestParameters: CreateJobScheduleV1JobSchedulesPost0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobScheduleOut>;
    /**
     * Create an organization
     */
    createOrganizationV1AdminOrgsPostRaw(requestParameters: CreateOrganizationV1AdminOrgsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminOrganizationDetail>>;
    /**
     * Create an organization
     */
    createOrganizationV1AdminOrgsPost(requestParameters: CreateOrganizationV1AdminOrgsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminOrganizationDetail>;
    /**
     * Create a role
     */
    createRoleV1AdminRolesPostRaw(requestParameters: CreateRoleV1AdminRolesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminRoleDetail>>;
    /**
     * Create a role
     */
    createRoleV1AdminRolesPost(requestParameters: CreateRoleV1AdminRolesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminRoleDetail>;
    /**
     * Create Tag
     */
    createTagV1BookmarksTagsPostRaw(requestParameters: CreateTagV1BookmarksTagsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TagOut>>;
    /**
     * Create Tag
     */
    createTagV1BookmarksTagsPost(requestParameters: CreateTagV1BookmarksTagsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TagOut>;
    /**
     * Create an API token
     */
    createTokenV1MeTokensPostRaw(requestParameters: CreateTokenV1MeTokensPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiTokenWithSecret>>;
    /**
     * Create an API token
     */
    createTokenV1MeTokensPost(requestParameters: CreateTokenV1MeTokensPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiTokenWithSecret>;
    /**
     * Db Status
     */
    dbStatusV1StatusDbGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Db Status
     */
    dbStatusV1StatusDbGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Delete Bookmark Folder
     */
    deleteBookmarkFolderV1BookmarksBookmarkIdFolderDeleteRaw(requestParameters: DeleteBookmarkFolderV1BookmarksBookmarkIdFolderDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete Bookmark Folder
     */
    deleteBookmarkFolderV1BookmarksBookmarkIdFolderDelete(requestParameters: DeleteBookmarkFolderV1BookmarksBookmarkIdFolderDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete Bookmark
     */
    deleteBookmarkV1BookmarksBookmarkIdDeleteRaw(requestParameters: DeleteBookmarkV1BookmarksBookmarkIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete Bookmark
     */
    deleteBookmarkV1BookmarksBookmarkIdDelete(requestParameters: DeleteBookmarkV1BookmarksBookmarkIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete Folder
     */
    deleteFolderV1BookmarksFoldersFolderIdDeleteRaw(requestParameters: DeleteFolderV1BookmarksFoldersFolderIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete Folder
     */
    deleteFolderV1BookmarksFoldersFolderIdDelete(requestParameters: DeleteFolderV1BookmarksFoldersFolderIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete a job schedule
     */
    deleteJobScheduleV1JobSchedulesScheduleIdDeleteRaw(requestParameters: DeleteJobScheduleV1JobSchedulesScheduleIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete a job schedule
     */
    deleteJobScheduleV1JobSchedulesScheduleIdDelete(requestParameters: DeleteJobScheduleV1JobSchedulesScheduleIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete an organization
     */
    deleteOrganizationV1AdminOrgsOrganizationIdDeleteRaw(requestParameters: DeleteOrganizationV1AdminOrgsOrganizationIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete an organization
     */
    deleteOrganizationV1AdminOrgsOrganizationIdDelete(requestParameters: DeleteOrganizationV1AdminOrgsOrganizationIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete a role
     */
    deleteRoleV1AdminRolesRoleIdDeleteRaw(requestParameters: DeleteRoleV1AdminRolesRoleIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete a role
     */
    deleteRoleV1AdminRolesRoleIdDelete(requestParameters: DeleteRoleV1AdminRolesRoleIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete Tag
     */
    deleteTagV1BookmarksTagsTagIdDeleteRaw(requestParameters: DeleteTagV1BookmarksTagsTagIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete Tag
     */
    deleteTagV1BookmarksTagsTagIdDelete(requestParameters: DeleteTagV1BookmarksTagsTagIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Download template asset
     */
    downloadTemplateV1TemplatesTemplateIdDownloadGetRaw(requestParameters: DownloadTemplateV1TemplatesTemplateIdDownloadGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Download template asset
     */
    downloadTemplateV1TemplatesTemplateIdDownloadGet(requestParameters: DownloadTemplateV1TemplatesTemplateIdDownloadGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Enqueue Job
     */
    enqueueJobV1JobsPostRaw(requestParameters: EnqueueJobV1JobsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Enqueue Job
     */
    enqueueJobV1JobsPost(requestParameters: EnqueueJobV1JobsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Export Bookmarks
     */
    exportBookmarksV1BookmarksExportGetRaw(requestParameters: ExportBookmarksV1BookmarksExportGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Export Bookmarks
     */
    exportBookmarksV1BookmarksExportGet(requestParameters?: ExportBookmarksV1BookmarksExportGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get Bookmark Folder
     */
    getBookmarkFolderV1BookmarksBookmarkIdFolderGetRaw(requestParameters: GetBookmarkFolderV1BookmarksBookmarkIdFolderGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolderOut>>;
    /**
     * Get Bookmark Folder
     */
    getBookmarkFolderV1BookmarksBookmarkIdFolderGet(requestParameters: GetBookmarkFolderV1BookmarksBookmarkIdFolderGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolderOut>;
    /**
     * Get Bookmark Tags
     */
    getBookmarkTagsV1BookmarksBookmarkIdTagsGetRaw(requestParameters: GetBookmarkTagsV1BookmarksBookmarkIdTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TagOut>>>;
    /**
     * Get Bookmark Tags
     */
    getBookmarkTagsV1BookmarksBookmarkIdTagsGet(requestParameters: GetBookmarkTagsV1BookmarksBookmarkIdTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TagOut>>;
    /**
     * Get Bookmark
     */
    getBookmarkV1BookmarksBookmarkIdGetRaw(requestParameters: GetBookmarkV1BookmarksBookmarkIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BookmarkOut>>;
    /**
     * Get Bookmark
     */
    getBookmarkV1BookmarksBookmarkIdGet(requestParameters: GetBookmarkV1BookmarksBookmarkIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BookmarkOut>;
    /**
     * Get a job schedule
     */
    getJobScheduleV1JobSchedulesScheduleIdGetRaw(requestParameters: GetJobScheduleV1JobSchedulesScheduleIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobScheduleOut>>;
    /**
     * Get a job schedule
     */
    getJobScheduleV1JobSchedulesScheduleIdGet(requestParameters: GetJobScheduleV1JobSchedulesScheduleIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobScheduleOut>;
    /**
     * Get a single job by id.
     * Get job
     */
    getJobV1JobsJobIdGetRaw(requestParameters: GetJobV1JobsJobIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobOut>>;
    /**
     * Get a single job by id.
     * Get job
     */
    getJobV1JobsJobIdGet(requestParameters: GetJobV1JobsJobIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobOut>;
    /**
     * Get current user profile
     */
    getMeV1MeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MeOut>>;
    /**
     * Get current user profile
     */
    getMeV1MeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MeOut>;
    /**
     * Get organization details
     */
    getOrganizationV1AdminOrgsOrganizationIdGetRaw(requestParameters: GetOrganizationV1AdminOrgsOrganizationIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminOrganizationDetail>>;
    /**
     * Get organization details
     */
    getOrganizationV1AdminOrgsOrganizationIdGet(requestParameters: GetOrganizationV1AdminOrgsOrganizationIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminOrganizationDetail>;
    /**
     * Get role details
     */
    getRoleV1AdminRolesRoleIdGetRaw(requestParameters: GetRoleV1AdminRolesRoleIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminRoleDetail>>;
    /**
     * Get role details
     */
    getRoleV1AdminRolesRoleIdGet(requestParameters: GetRoleV1AdminRolesRoleIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminRoleDetail>;
    /**
     * Retrieve setup progress
     */
    getSetupStatusV1SiteSettingsSetupStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteSetupStatusOut>>;
    /**
     * Retrieve setup progress
     */
    getSetupStatusV1SiteSettingsSetupStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteSetupStatusOut>;
    /**
     * Get Status
     */
    getStatusV1StatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatusResponse>>;
    /**
     * Get Status
     */
    getStatusV1StatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatusResponse>;
    /**
     * Get API token metadata
     */
    getTokenV1MeTokensTokenIdGetRaw(requestParameters: GetTokenV1MeTokensTokenIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiTokenOut>>;
    /**
     * Get API token metadata
     */
    getTokenV1MeTokensTokenIdGet(requestParameters: GetTokenV1MeTokensTokenIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiTokenOut>;
    /**
     * Get a user
     */
    getUserV1AdminUsersUserIdGetRaw(requestParameters: GetUserV1AdminUsersUserIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminUserOut>>;
    /**
     * Get a user
     */
    getUserV1AdminUsersUserIdGet(requestParameters: GetUserV1AdminUsersUserIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminUserOut>;
    /**
     * Retrieve the public welcome message
     */
    getWelcomeSettingV1SiteSettingsWelcomeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteWelcomeSettingOut>>;
    /**
     * Retrieve the public welcome message
     */
    getWelcomeSettingV1SiteSettingsWelcomeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteWelcomeSettingOut>;
    /**
     * Grant a role to a user
     */
    grantUserRoleV1AdminUsersUserIdRolesRoleNamePostRaw(requestParameters: GrantUserRoleV1AdminUsersUserIdRolesRoleNamePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminUserOut>>;
    /**
     * Grant a role to a user
     */
    grantUserRoleV1AdminUsersUserIdRolesRoleNamePost(requestParameters: GrantUserRoleV1AdminUsersUserIdRolesRoleNamePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminUserOut>;
    /**
     * Head Bookmarks
     */
    headBookmarksV1BookmarksHeadRaw(requestParameters: HeadBookmarksV1BookmarksHeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Head Bookmarks
     */
    headBookmarksV1BookmarksHead(requestParameters?: HeadBookmarksV1BookmarksHeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Head Bookmarks
     */
    headBookmarksV1BookmarksHead_2Raw(requestParameters: HeadBookmarksV1BookmarksHead0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Head Bookmarks
     */
    headBookmarksV1BookmarksHead_2(requestParameters?: HeadBookmarksV1BookmarksHead0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Integrations Status
     */
    integrationsStatusV1StatusIntegrationsGetRaw(requestParameters: IntegrationsStatusV1StatusIntegrationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Integrations Status
     */
    integrationsStatusV1StatusIntegrationsGet(requestParameters?: IntegrationsStatusV1StatusIntegrationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * List audit log entries
     */
    listAuditLogsV1AdminAuditGetRaw(requestParameters: ListAuditLogsV1AdminAuditGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuditLogsPage>>;
    /**
     * List audit log entries
     */
    listAuditLogsV1AdminAuditGet(requestParameters?: ListAuditLogsV1AdminAuditGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuditLogsPage>;
    /**
     * List Bookmarks
     */
    listBookmarksV1BookmarksGetRaw(requestParameters: ListBookmarksV1BookmarksGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BookmarksPage>>;
    /**
     * List Bookmarks
     */
    listBookmarksV1BookmarksGet(requestParameters?: ListBookmarksV1BookmarksGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BookmarksPage>;
    /**
     * List Bookmarks
     */
    listBookmarksV1BookmarksGet_3Raw(requestParameters: ListBookmarksV1BookmarksGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BookmarksPage>>;
    /**
     * List Bookmarks
     */
    listBookmarksV1BookmarksGet_3(requestParameters?: ListBookmarksV1BookmarksGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BookmarksPage>;
    /**
     * List credentials
     */
    listCredentialsV1V1CredentialsGetRaw(requestParameters: ListCredentialsV1V1CredentialsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CredentialsPage>>;
    /**
     * List credentials
     */
    listCredentialsV1V1CredentialsGet(requestParameters?: ListCredentialsV1V1CredentialsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CredentialsPage>;
    /**
     * List credentials
     */
    listCredentialsV1V1CredentialsGet_4Raw(requestParameters: ListCredentialsV1V1CredentialsGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CredentialsPage>>;
    /**
     * List credentials
     */
    listCredentialsV1V1CredentialsGet_4(requestParameters?: ListCredentialsV1V1CredentialsGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CredentialsPage>;
    /**
     * List feeds
     */
    listFeedsV1V1FeedsGetRaw(requestParameters: ListFeedsV1V1FeedsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeedsPage>>;
    /**
     * List feeds
     */
    listFeedsV1V1FeedsGet(requestParameters?: ListFeedsV1V1FeedsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeedsPage>;
    /**
     * List feeds
     */
    listFeedsV1V1FeedsGet_5Raw(requestParameters: ListFeedsV1V1FeedsGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeedsPage>>;
    /**
     * List feeds
     */
    listFeedsV1V1FeedsGet_5(requestParameters?: ListFeedsV1V1FeedsGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeedsPage>;
    /**
     * List Folders
     */
    listFoldersV1BookmarksFoldersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FolderOut>>>;
    /**
     * List Folders
     */
    listFoldersV1BookmarksFoldersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FolderOut>>;
    /**
     * List job schedules
     */
    listJobSchedulesV1JobSchedulesGetRaw(requestParameters: ListJobSchedulesV1JobSchedulesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobSchedulesPage>>;
    /**
     * List job schedules
     */
    listJobSchedulesV1JobSchedulesGet(requestParameters?: ListJobSchedulesV1JobSchedulesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobSchedulesPage>;
    /**
     * List job schedules
     */
    listJobSchedulesV1JobSchedulesGet_6Raw(requestParameters: ListJobSchedulesV1JobSchedulesGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobSchedulesPage>>;
    /**
     * List job schedules
     */
    listJobSchedulesV1JobSchedulesGet_6(requestParameters?: ListJobSchedulesV1JobSchedulesGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobSchedulesPage>;
    /**
     * List jobs with filters, pagination, and sorting.
     * List jobs
     */
    listJobsV1JobsGetRaw(requestParameters: ListJobsV1JobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobsPage>>;
    /**
     * List jobs with filters, pagination, and sorting.
     * List jobs
     */
    listJobsV1JobsGet(requestParameters?: ListJobsV1JobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobsPage>;
    /**
     * List jobs with filters, pagination, and sorting.
     * List jobs
     */
    listJobsV1JobsGet_7Raw(requestParameters: ListJobsV1JobsGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobsPage>>;
    /**
     * List jobs with filters, pagination, and sorting.
     * List jobs
     */
    listJobsV1JobsGet_7(requestParameters?: ListJobsV1JobsGet0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobsPage>;
    /**
     * List organizations
     */
    listOrganizationsV1AdminOrgsGetRaw(requestParameters: ListOrganizationsV1AdminOrgsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminOrganizationsPage>>;
    /**
     * List organizations
     */
    listOrganizationsV1AdminOrgsGet(requestParameters?: ListOrganizationsV1AdminOrgsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminOrganizationsPage>;
    /**
     * List roles
     */
    listRolesV1AdminRolesGetRaw(requestParameters: ListRolesV1AdminRolesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminRolesPage>>;
    /**
     * List roles
     */
    listRolesV1AdminRolesGet(requestParameters?: ListRolesV1AdminRolesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminRolesPage>;
    /**
     * List site configs
     */
    listSiteConfigsV1V1SiteConfigsGetRaw(requestParameters: ListSiteConfigsV1V1SiteConfigsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteConfigsPage>>;
    /**
     * List site configs
     */
    listSiteConfigsV1V1SiteConfigsGet(requestParameters?: ListSiteConfigsV1V1SiteConfigsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteConfigsPage>;
    /**
     * List Tags
     */
    listTagsV1BookmarksTagsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TagOut>>>;
    /**
     * List Tags
     */
    listTagsV1BookmarksTagsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TagOut>>;
    /**
     * List available templates
     */
    listTemplatesV1TemplatesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateListResponse>>;
    /**
     * List available templates
     */
    listTemplatesV1TemplatesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateListResponse>;
    /**
     * List API tokens
     */
    listTokensV1MeTokensGetRaw(requestParameters: ListTokensV1MeTokensGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiTokensPage>>;
    /**
     * List API tokens
     */
    listTokensV1MeTokensGet(requestParameters?: ListTokensV1MeTokensGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiTokensPage>;
    /**
     * List users
     */
    listUsersV1AdminUsersGetRaw(requestParameters: ListUsersV1AdminUsersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminUsersPage>>;
    /**
     * List users
     */
    listUsersV1AdminUsersGet(requestParameters?: ListUsersV1AdminUsersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminUsersPage>;
    /**
     * Preview Bookmark
     */
    previewBookmarkV1BookmarksBookmarkIdPreviewGetRaw(requestParameters: PreviewBookmarkV1BookmarksBookmarkIdPreviewGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * Preview Bookmark
     */
    previewBookmarkV1BookmarksBookmarkIdPreviewGet(requestParameters: PreviewBookmarkV1BookmarksBookmarkIdPreviewGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * Remove a user from an organization
     */
    removeOrganizationMemberV1AdminOrgsOrganizationIdMembersUserIdDeleteRaw(requestParameters: RemoveOrganizationMemberV1AdminOrgsOrganizationIdMembersUserIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminOrganizationDetail>>;
    /**
     * Remove a user from an organization
     */
    removeOrganizationMemberV1AdminOrgsOrganizationIdMembersUserIdDelete(requestParameters: RemoveOrganizationMemberV1AdminOrgsOrganizationIdMembersUserIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminOrganizationDetail>;
    /**
     * Requeue all failed/dead jobs optionally filtered by type.
     * Retry all jobs
     */
    retryAllJobsV1JobsRetryAllPostRaw(requestParameters: RetryAllJobsV1JobsRetryAllPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Requeue all failed/dead jobs optionally filtered by type.
     * Retry all jobs
     */
    retryAllJobsV1JobsRetryAllPost(requestParameters: RetryAllJobsV1JobsRetryAllPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Reset attempts and requeue a failed/dead job
     * Retry a job
     */
    retryJobV1JobsJobIdRetryPostRaw(requestParameters: RetryJobV1JobsJobIdRetryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobOut>>;
    /**
     * Reset attempts and requeue a failed/dead job
     * Retry a job
     */
    retryJobV1JobsJobIdRetryPost(requestParameters: RetryJobV1JobsJobIdRetryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobOut>;
    /**
     * Revoke an API token
     */
    revokeTokenV1MeTokensTokenIdDeleteRaw(requestParameters: RevokeTokenV1MeTokensTokenIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Revoke an API token
     */
    revokeTokenV1MeTokensTokenIdDelete(requestParameters: RevokeTokenV1MeTokensTokenIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Revoke a role from a user
     */
    revokeUserRoleV1AdminUsersUserIdRolesRoleNameDeleteRaw(requestParameters: RevokeUserRoleV1AdminUsersUserIdRolesRoleNameDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Revoke a role from a user
     */
    revokeUserRoleV1AdminUsersUserIdRolesRoleNameDelete(requestParameters: RevokeUserRoleV1AdminUsersUserIdRolesRoleNameDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Enqueue a job for immediate execution
     */
    runJobScheduleNowV1JobSchedulesScheduleIdRunNowPostRaw(requestParameters: RunJobScheduleNowV1JobSchedulesScheduleIdRunNowPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobOut>>;
    /**
     * Enqueue a job for immediate execution
     */
    runJobScheduleNowV1JobSchedulesScheduleIdRunNowPost(requestParameters: RunJobScheduleNowV1JobSchedulesScheduleIdRunNowPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobOut>;
    /**
     * Server-sent events stream of jobs list.
     * Stream jobs
     */
    streamJobsV1JobsStreamGetRaw(requestParameters: StreamJobsV1JobsStreamGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Server-sent events stream of jobs list.
     * Stream jobs
     */
    streamJobsV1JobsStreamGet(requestParameters?: StreamJobsV1JobsStreamGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Test Instapaper creds
     */
    testInstapaperV1IntegrationsInstapaperTestPostRaw(requestParameters: TestInstapaperV1IntegrationsInstapaperTestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Test Instapaper creds
     */
    testInstapaperV1IntegrationsInstapaperTestPost(requestParameters: TestInstapaperV1IntegrationsInstapaperTestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Test Miniflux creds
     */
    testMinifluxV1IntegrationsMinifluxTestPostRaw(requestParameters: TestMinifluxV1IntegrationsMinifluxTestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Test Miniflux creds
     */
    testMinifluxV1IntegrationsMinifluxTestPost(requestParameters: TestMinifluxV1IntegrationsMinifluxTestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Test site config selectors against the login page
     */
    testSiteConfigV1SiteConfigsConfigIdTestPostRaw(requestParameters: TestSiteConfigV1SiteConfigsConfigIdTestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Test site config selectors against the login page
     */
    testSiteConfigV1SiteConfigsConfigIdTestPost(requestParameters: TestSiteConfigV1SiteConfigsConfigIdTestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Toggle schedule active state
     */
    toggleJobScheduleV1JobSchedulesScheduleIdTogglePostRaw(requestParameters: ToggleJobScheduleV1JobSchedulesScheduleIdTogglePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobScheduleOut>>;
    /**
     * Toggle schedule active state
     */
    toggleJobScheduleV1JobSchedulesScheduleIdTogglePost(requestParameters: ToggleJobScheduleV1JobSchedulesScheduleIdTogglePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobScheduleOut>;
    /**
     * Update Bookmark Folder
     */
    updateBookmarkFolderV1BookmarksBookmarkIdFolderPutRaw(requestParameters: UpdateBookmarkFolderV1BookmarksBookmarkIdFolderPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolderOut>>;
    /**
     * Update Bookmark Folder
     */
    updateBookmarkFolderV1BookmarksBookmarkIdFolderPut(requestParameters: UpdateBookmarkFolderV1BookmarksBookmarkIdFolderPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolderOut>;
    /**
     * Update Bookmark Tags
     */
    updateBookmarkTagsV1BookmarksBookmarkIdTagsPutRaw(requestParameters: UpdateBookmarkTagsV1BookmarksBookmarkIdTagsPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TagOut>>>;
    /**
     * Update Bookmark Tags
     */
    updateBookmarkTagsV1BookmarksBookmarkIdTagsPut(requestParameters: UpdateBookmarkTagsV1BookmarksBookmarkIdTagsPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TagOut>>;
    /**
     * Update Folder
     */
    updateFolderV1BookmarksFoldersFolderIdPutRaw(requestParameters: UpdateFolderV1BookmarksFoldersFolderIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolderOut>>;
    /**
     * Update Folder
     */
    updateFolderV1BookmarksFoldersFolderIdPut(requestParameters: UpdateFolderV1BookmarksFoldersFolderIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolderOut>;
    /**
     * Update a job schedule
     */
    updateJobScheduleV1JobSchedulesScheduleIdPatchRaw(requestParameters: UpdateJobScheduleV1JobSchedulesScheduleIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobScheduleOut>>;
    /**
     * Update a job schedule
     */
    updateJobScheduleV1JobSchedulesScheduleIdPatch(requestParameters: UpdateJobScheduleV1JobSchedulesScheduleIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobScheduleOut>;
    /**
     * Update current user profile
     */
    updateMeV1MePatchRaw(requestParameters: UpdateMeV1MePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MeOut>>;
    /**
     * Update current user profile
     */
    updateMeV1MePatch(requestParameters: UpdateMeV1MePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MeOut>;
    /**
     * Update an organization
     */
    updateOrganizationV1AdminOrgsOrganizationIdPatchRaw(requestParameters: UpdateOrganizationV1AdminOrgsOrganizationIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminOrganizationDetail>>;
    /**
     * Update an organization
     */
    updateOrganizationV1AdminOrgsOrganizationIdPatch(requestParameters: UpdateOrganizationV1AdminOrgsOrganizationIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminOrganizationDetail>;
    /**
     * Update a role
     */
    updateRoleV1AdminRolesRoleIdPatchRaw(requestParameters: UpdateRoleV1AdminRolesRoleIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminRoleDetail>>;
    /**
     * Update a role
     */
    updateRoleV1AdminRolesRoleIdPatch(requestParameters: UpdateRoleV1AdminRolesRoleIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminRoleDetail>;
    /**
     * Create or replace setup progress
     */
    updateSetupStatusV1SiteSettingsSetupStatusPutRaw(requestParameters: UpdateSetupStatusV1SiteSettingsSetupStatusPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteSetupStatusOut>>;
    /**
     * Create or replace setup progress
     */
    updateSetupStatusV1SiteSettingsSetupStatusPut(requestParameters: UpdateSetupStatusV1SiteSettingsSetupStatusPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteSetupStatusOut>;
    /**
     * Update Tag
     */
    updateTagV1BookmarksTagsTagIdPutRaw(requestParameters: UpdateTagV1BookmarksTagsTagIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TagOut>>;
    /**
     * Update Tag
     */
    updateTagV1BookmarksTagsTagIdPut(requestParameters: UpdateTagV1BookmarksTagsTagIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TagOut>;
    /**
     * Update user role overrides
     */
    updateUserRoleOverridesV1AdminUsersUserIdRoleOverridesPatchRaw(requestParameters: UpdateUserRoleOverridesV1AdminUsersUserIdRoleOverridesPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminUserOut>>;
    /**
     * Update user role overrides
     */
    updateUserRoleOverridesV1AdminUsersUserIdRoleOverridesPatch(requestParameters: UpdateUserRoleOverridesV1AdminUsersUserIdRoleOverridesPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminUserOut>;
    /**
     * Update a user
     */
    updateUserV1AdminUsersUserIdPatchRaw(requestParameters: UpdateUserV1AdminUsersUserIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminUserOut>>;
    /**
     * Update a user
     */
    updateUserV1AdminUsersUserIdPatch(requestParameters: UpdateUserV1AdminUsersUserIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminUserOut>;
    /**
     * Partially update the welcome message
     */
    updateWelcomeSettingV1SiteSettingsWelcomePatchRaw(requestParameters: UpdateWelcomeSettingV1SiteSettingsWelcomePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteWelcomeSettingOut>>;
    /**
     * Partially update the welcome message
     */
    updateWelcomeSettingV1SiteSettingsWelcomePatch(requestParameters: UpdateWelcomeSettingV1SiteSettingsWelcomePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteWelcomeSettingOut>;
    /**
     * Create or replace the welcome message
     */
    updateWelcomeSettingV1SiteSettingsWelcomePutRaw(requestParameters: UpdateWelcomeSettingV1SiteSettingsWelcomePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteWelcomeSettingOut>>;
    /**
     * Create or replace the welcome message
     */
    updateWelcomeSettingV1SiteSettingsWelcomePut(requestParameters: UpdateWelcomeSettingV1SiteSettingsWelcomePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteWelcomeSettingOut>;
    /**
     * Dry-run validation per job type
     * Validate a job payload
     */
    validateJobPayloadV1JobsValidatePostRaw(requestParameters: ValidateJobPayloadV1JobsValidatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Dry-run validation per job type
     * Validate a job payload
     */
    validateJobPayloadV1JobsValidatePost(requestParameters: ValidateJobPayloadV1JobsValidatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
}
