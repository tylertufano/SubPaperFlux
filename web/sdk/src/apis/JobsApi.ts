/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  JobRequest,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    JobRequestFromJSON,
    JobRequestToJSON,
} from '../models/index';

export interface EnqueueJobJobsPostRequest {
    jobRequest: JobRequest;
}

/**
 * 
 */
export class JobsApi extends runtime.BaseAPI {

    /**
     * Enqueue Job
     */
    async enqueueJobJobsPostRaw(requestParameters: EnqueueJobJobsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['jobRequest'] == null) {
            throw new runtime.RequiredError(
                'jobRequest',
                'Required parameter "jobRequest" was null or undefined when calling enqueueJobJobsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("HTTPBearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/jobs/`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: JobRequestToJSON(requestParameters['jobRequest']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Enqueue Job
     */
    async enqueueJobJobsPost(requestParameters: EnqueueJobJobsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.enqueueJobJobsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
