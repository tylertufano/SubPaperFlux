/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdminUserOrganization
 */
export interface AdminUserOrganization {
    /**
     * 
     * @type {string}
     * @memberof AdminUserOrganization
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AdminUserOrganization
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof AdminUserOrganization
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AdminUserOrganization
     */
    description?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof AdminUserOrganization
     */
    isDefault?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof AdminUserOrganization
     */
    joinedAt: Date;
}

/**
 * Check if a given object implements the AdminUserOrganization interface.
 */
export function instanceOfAdminUserOrganization(value: object): value is AdminUserOrganization {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('joinedAt' in value) || value['joinedAt'] === undefined) return false;
    return true;
}

export function AdminUserOrganizationFromJSON(json: any): AdminUserOrganization {
    return AdminUserOrganizationFromJSONTyped(json, false);
}

export function AdminUserOrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUserOrganization {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'slug': json['slug'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'isDefault': json['is_default'] == null ? undefined : json['is_default'],
        'joinedAt': (new Date(json['joined_at'])),
    };
}

export function AdminUserOrganizationToJSON(json: any): AdminUserOrganization {
    return AdminUserOrganizationToJSONTyped(json, false);
}

export function AdminUserOrganizationToJSONTyped(value?: AdminUserOrganization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'slug': value['slug'],
        'name': value['name'],
        'description': value['description'],
        'is_default': value['isDefault'],
        'joined_at': ((value['joinedAt']).toISOString()),
    };
}

