/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BookmarkOut
 */
export interface BookmarkOut {
    /**
     * 
     * @type {any}
     * @memberof BookmarkOut
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof BookmarkOut
     */
    instapaperBookmarkId: any | null;
    /**
     * 
     * @type {any}
     * @memberof BookmarkOut
     */
    title?: any | null;
    /**
     * 
     * @type {any}
     * @memberof BookmarkOut
     */
    url?: any | null;
    /**
     * 
     * @type {any}
     * @memberof BookmarkOut
     */
    contentLocation?: any | null;
    /**
     * 
     * @type {any}
     * @memberof BookmarkOut
     */
    feedId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof BookmarkOut
     */
    publishedAt?: any | null;
}

/**
 * Check if a given object implements the BookmarkOut interface.
 */
export function instanceOfBookmarkOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "instapaperBookmarkId" in value;

    return isInstance;
}

export function BookmarkOutFromJSON(json: any): BookmarkOut {
    return BookmarkOutFromJSONTyped(json, false);
}

export function BookmarkOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookmarkOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'instapaperBookmarkId': json['instapaper_bookmark_id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'contentLocation': !exists(json, 'content_location') ? undefined : json['content_location'],
        'feedId': !exists(json, 'feed_id') ? undefined : json['feed_id'],
        'publishedAt': !exists(json, 'published_at') ? undefined : json['published_at'],
    };
}

export function BookmarkOutToJSON(value?: BookmarkOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'instapaper_bookmark_id': value.instapaperBookmarkId,
        'title': value.title,
        'url': value.url,
        'content_location': value.contentLocation,
        'feed_id': value.feedId,
        'published_at': value.publishedAt,
    };
}

