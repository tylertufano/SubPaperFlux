/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApiConfig } from './ApiConfig';
import {
    ApiConfigFromJSON,
    ApiConfigFromJSONTyped,
    ApiConfigToJSON,
    ApiConfigToJSONTyped,
} from './ApiConfig';

/**
 * 
 * @export
 * @interface SiteConfigApi
 */
export interface SiteConfigApi {
    /**
     * 
     * @type {string}
     * @memberof SiteConfigApi
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SiteConfigApi
     */
    siteUrl: string;
    /**
     * 
     * @type {string}
     * @memberof SiteConfigApi
     */
    ownerUserId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SiteConfigApi
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SiteConfigApi
     */
    loginType?: SiteConfigApiLoginTypeEnum;
    /**
     * 
     * @type {ApiConfig}
     * @memberof SiteConfigApi
     */
    apiConfig: ApiConfig;
}


/**
 * @export
 */
export const SiteConfigApiLoginTypeEnum = {
    Api: 'api'
} as const;
export type SiteConfigApiLoginTypeEnum = typeof SiteConfigApiLoginTypeEnum[keyof typeof SiteConfigApiLoginTypeEnum];


/**
 * Check if a given object implements the SiteConfigApi interface.
 */
export function instanceOfSiteConfigApi(value: object): value is SiteConfigApi {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('siteUrl' in value) || value['siteUrl'] === undefined) return false;
    if (!('apiConfig' in value) || value['apiConfig'] === undefined) return false;
    return true;
}

export function SiteConfigApiFromJSON(json: any): SiteConfigApi {
    return SiteConfigApiFromJSONTyped(json, false);
}

export function SiteConfigApiFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteConfigApi {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'siteUrl': json['site_url'],
        'ownerUserId': json['owner_user_id'] == null ? undefined : json['owner_user_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'loginType': json['login_type'] == null ? undefined : json['login_type'],
        'apiConfig': ApiConfigFromJSON(json['api_config']),
    };
}

export function SiteConfigApiToJSON(json: any): SiteConfigApi {
    return SiteConfigApiToJSONTyped(json, false);
}

export function SiteConfigApiToJSONTyped(value?: SiteConfigApi | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'site_url': value['siteUrl'],
        'owner_user_id': value['ownerUserId'],
        'id': value['id'],
        'login_type': value['loginType'],
        'api_config': ApiConfigToJSON(value['apiConfig']),
    };
}

