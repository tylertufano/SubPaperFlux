/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiTokenCreate
 */
export interface ApiTokenCreate {
    /**
     * 
     * @type {string}
     * @memberof ApiTokenCreate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ApiTokenCreate
     */
    description?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiTokenCreate
     */
    scopes?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof ApiTokenCreate
     */
    expiresAt?: Date | null;
}

/**
 * Check if a given object implements the ApiTokenCreate interface.
 */
export function instanceOfApiTokenCreate(value: object): value is ApiTokenCreate {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ApiTokenCreateFromJSON(json: any): ApiTokenCreate {
    return ApiTokenCreateFromJSONTyped(json, false);
}

export function ApiTokenCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiTokenCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
    };
}

export function ApiTokenCreateToJSON(json: any): ApiTokenCreate {
    return ApiTokenCreateToJSONTyped(json, false);
}

export function ApiTokenCreateToJSONTyped(value?: ApiTokenCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'scopes': value['scopes'],
        'expires_at': value['expiresAt'] === null ? null : ((value['expiresAt'] as any)?.toISOString()),
    };
}

