/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TagOut } from './TagOut';
import {
    TagOutFromJSON,
    TagOutFromJSONTyped,
    TagOutToJSON,
    TagOutToJSONTyped,
} from './TagOut';

/**
 * 
 * @export
 * @interface BookmarkTagSummary
 */
export interface BookmarkTagSummary {
    /**
     * 
     * @type {string}
     * @memberof BookmarkTagSummary
     */
    bookmarkId: string;
    /**
     * 
     * @type {Array<TagOut>}
     * @memberof BookmarkTagSummary
     */
    tags?: Array<TagOut>;
}

/**
 * Check if a given object implements the BookmarkTagSummary interface.
 */
export function instanceOfBookmarkTagSummary(value: object): value is BookmarkTagSummary {
    if (!('bookmarkId' in value) || value['bookmarkId'] === undefined) return false;
    return true;
}

export function BookmarkTagSummaryFromJSON(json: any): BookmarkTagSummary {
    return BookmarkTagSummaryFromJSONTyped(json, false);
}

export function BookmarkTagSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookmarkTagSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'bookmarkId': json['bookmark_id'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagOutFromJSON)),
    };
}

export function BookmarkTagSummaryToJSON(json: any): BookmarkTagSummary {
    return BookmarkTagSummaryToJSONTyped(json, false);
}

export function BookmarkTagSummaryToJSONTyped(value?: BookmarkTagSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bookmark_id': value['bookmarkId'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(TagOutToJSON)),
    };
}

