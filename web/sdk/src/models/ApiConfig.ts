/* tslint:disable */
/* eslint-disable */
/**
 * SubPaperFlux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiConfig
 */
export interface ApiConfig {
    /**
     * 
     * @type {string}
     * @memberof ApiConfig
     */
    endpoint: string;
    /**
     * 
     * @type {string}
     * @memberof ApiConfig
     */
    method: ApiConfigMethodEnum;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ApiConfig
     */
    headers?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ApiConfig
     */
    body?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ApiConfig
     */
    cookies?: { [key: string]: string; };
}


/**
 * @export
 */
export const ApiConfigMethodEnum = {
    Get: 'GET',
    Post: 'POST',
    Put: 'PUT',
    Patch: 'PATCH',
    Delete: 'DELETE'
} as const;
export type ApiConfigMethodEnum = typeof ApiConfigMethodEnum[keyof typeof ApiConfigMethodEnum];


/**
 * Check if a given object implements the ApiConfig interface.
 */
export function instanceOfApiConfig(value: object): value is ApiConfig {
    if (!('endpoint' in value) || value['endpoint'] === undefined) return false;
    if (!('method' in value) || value['method'] === undefined) return false;
    return true;
}

export function ApiConfigFromJSON(json: any): ApiConfig {
    return ApiConfigFromJSONTyped(json, false);
}

export function ApiConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'endpoint': json['endpoint'],
        'method': json['method'],
        'headers': json['headers'] == null ? undefined : json['headers'],
        'body': json['body'] == null ? undefined : json['body'],
        'cookies': json['cookies'] == null ? undefined : json['cookies'],
    };
}

export function ApiConfigToJSON(json: any): ApiConfig {
    return ApiConfigToJSONTyped(json, false);
}

export function ApiConfigToJSONTyped(value?: ApiConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endpoint': value['endpoint'],
        'method': value['method'],
        'headers': value['headers'],
        'body': value['body'],
        'cookies': value['cookies'],
    };
}

